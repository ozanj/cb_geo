---
title: 'Title'
subtitle: 'Subtitle'
author: ['Author', 'Author']
bibliography: ./assets/bib/cb_geomarket_bib.bib
format:
  revealjs: 
    theme: [default, ./assets/css/custom.scss]
    controls: true
    controls-layout: bottom-right
    controls-tutorial: true
    transition: slide
    background-transition: fade
    auto-stretch: false
    slide-level: 3
    template-partials:
      - ./assets/html/title-slide.html
include-in-header: ./assets/html/header.html
---

```{r setup, include = FALSE}
library(tidyverse)
library(kableExtra)  # For collapse_rows() to work: https://stackoverflow.com/a/67803915/6373540
library(tools)

knitr::opts_chunk$set(echo = F, message = F)

results_dir <- file.path('.', 'results')
graphs_dir <- file.path(results_dir, 'graphs')

metros <- c(
  'atlanta',
  'bay area',
  'boston',
  'chicago',
  'cleveland',
  'dallas',
  'dc maryland virginia',
  'detroit',
  'houston',
  'long island',
  'los angeles',
  'miami',
  'new york city',
  'northern new jersey',
  'orange county',
  'philadelphia',
  'san diego'
)

rqs <- c('rq1', 'rq2')
graph_types <- c('race', 'ses')
```


# Level-1 heading

## Level-2 heading

### Level-3 heading

### Level-3 heading
#### Level-4 subheading

### Test map

<iframe src="https://comforting-kashata-600ce0.netlify.app/" width=100% height=100% allowtransparency="true"></iframe>

# Results

```{r, echo=FALSE, results='asis'}
insert_figure <- function(rq, metro, graph_type, base_path = graphs_dir) {
  # Convert spaces -> underscores for filenames
  metro <- str_replace_all(string = metro, pattern = " ", replacement = "_")

  fig_file  <- file.path(base_path, str_c(rq, "_", metro, "_", graph_type, ".png"))
  cap_file  <- file.path(base_path, str_c(rq, "_", metro, "_", graph_type, "_title.txt"))
  note_file <- file.path(base_path, str_c(rq, "_", metro, "_", graph_type, "_note.txt"))
  
  # Print caption
  writeLines(paste0("#### ", readLines(cap_file, warn = FALSE)))
  
  # Output the figure block to the doc
  writeLines(str_c("![](", fig_file, ")\n"))
  
  # Print footnotes
  writeLines(
    str_c("<div class=\"footnote\">",
          paste0(readLines(note_file, warn = FALSE), collapse = "</br>"),
          "</div>")
  )
}

for (m in metros) {
  
  # Print a top-level heading for the metro area
  writeLines(str_c("## ", toTitleCase(m), " area"))
  
  for (rq in rqs) {
    rq_num <- str_replace(string = rq, pattern = "rq", replacement = "")
    
    if (rq == "rq1") { 
      # ---------------------------------------
      #  rq1 => run for every metro area 
      # ---------------------------------------
      for (g in graph_types) {
        # Print a heading for the RQ
        writeLines(str_c("### Research question ", rq_num))
        
        insert_figure(metro = m, rq = rq, graph_type = g)
      }
      
    } else if (rq == "rq2" & (m %in% c("chicago","philadelphia","los angeles","orange county","san diego","bay area"))) {
      # -------------------------------------------------
      # rq2 => run only for the specified metro areas
      # -------------------------------------------------
      
      # 1) For LA & Bay Area, we have SEPARATE row/col plots per order (2 files each).
      # 2) For all other metros in this subset, we still do the old "combined" row/col plots.
      
      # If LA or Bay Area => do the "separate" approach
      if (m %in% c("los angeles","bay area")) {
        
        # We'll insert each of the 8 new plots: race_row_plot_..., race_col_plot_...,
        # and firstgen_row_plot_..., firstgen_col_plot_...
        # Each suffix also ends with the order ID.
        for (suffix in c(
          "race_row_plot_448375", "race_row_plot_448374_448420",
          "race_col_plot_448375", "race_col_plot_448374_448420",
          "firstgen_row_plot_448375", "firstgen_row_plot_448374_448420",
          "firstgen_col_plot_448375", "firstgen_col_plot_448374_448420"
        )) {
          writeLines(str_c("### Research question ", rq_num))
          insert_figure(metro = m, rq = rq, graph_type = suffix)
        }
        
      } else {
        # For the other metros in the same set
        # (chicago, philadelphia, orange county, san diego):
        # we still show the combined row/col figure:
        
        for (suffix in c("race_row_plot", "race_col_plot",
                         "firstgen_row_plot", "firstgen_col_plot")) {
          writeLines(str_c("### Research question ", rq_num))
          insert_figure(metro = m, rq = rq, graph_type = suffix)
        }
      }
      
      # -------------------------------------------------
      # Then your custom calls by city:
      # -------------------------------------------------
      if (m == "chicago") {
        # two separate calls for 'chicago' order IDs
        writeLines(str_c("### Research question ", rq_num))
        insert_figure(metro = m, rq = rq, graph_type = "order_487984_race_by_firstgen")
        
        writeLines(str_c("### Research question ", rq_num))
        insert_figure(metro = m, rq = rq, graph_type = "order_488035_488053_race_by_firstgen")
        
      } else if (m == "philadelphia") {
        # likewise for 'philadelphia'
        writeLines(str_c("### Research question ", rq_num))
        insert_figure(metro = m, rq = rq, graph_type = "order_448922_race_by_firstgen")
        
        writeLines(str_c("### Research question ", rq_num))
        insert_figure(metro = m, rq = rq, graph_type = "order_448427_448440_race_by_firstgen")
        
      } else if (m %in% c("los angeles","orange county","san diego","bay area")) {
        # likewise for these 4 metros
        writeLines(str_c("### Research question ", rq_num))
        insert_figure(metro = m, rq = rq, graph_type = "order_448375_race_by_firstgen")
        
        writeLines(str_c("### Research question ", rq_num))
        insert_figure(metro = m, rq = rq, graph_type = "order_448374_448420_race_by_firstgen")
      }
      
    } # end of rq==rq2 section
    
  } # end of rqs
  
} # end of metros

```

### References

::: {#refs}
:::
